{"version":3,"file":"static/js/370.9baf8694.chunk.js","mappings":"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","sources":["webpack://reacct_part2/./src/components/Profile/Profile.module.css?b512","webpack://reacct_part2/./src/components/Profile/Banner/Banner.module.css?ae76","components/Profile/Banner/Banner.jsx","webpack://reacct_part2/./src/components/Profile/UserInfo/UserInfo.module.css?b96a","webpack://reacct_part2/./src/components/Profile/UserInfo/ProfileStatus/ProfileStatus.module.css?57d2","components/Profile/UserInfo/ProfileStatus/ProfileStatusHook.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/UserInfo/UserInfoContainer.jsx","components/Profile/UserInfo/UserInfoHook.jsx","webpack://reacct_part2/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://reacct_part2/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://reacct_part2/./src/components/Profile/MyPosts/PostMake/PostMake.module.css?b429","components/Profile/MyPosts/PostMake/PostMakeInput.jsx","components/Profile/MyPosts/PostMake/PostMake.jsx","components/Profile/MyPosts/PostMake/PostMakeContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","selectors/userSelectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__7bU56\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile__banner\":\"Banner_profile__banner__u6xG-\"};","import React from \"react\"\r\nimport c_css from \"./Banner.module.css\"\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <div className={c_css.profile__banner}>\r\n            <img src='./images/ow/background.jpg' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"UserInfo_userInfo__coNLn\",\"userInfo__desc\":\"UserInfo_userInfo__desc__ne+-+\",\"userInfo__img\":\"UserInfo_userInfo__img__2j2tW\",\"userInfo__nickname\":\"UserInfo_userInfo__nickname__tKhiC\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ProfileStatus_input__G6nDp\",\"userInfo__text\":\"ProfileStatus_userInfo__text__u6f+3\"};","import React, { useEffect, useState } from \"react\"\r\nimport c_css from \"./ProfileStatus.module.css\"\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    let [ stateStatus, stateStatusChange ] = useState(props.status);\r\n    let [ stateIsEditing, stateIsEditingChange ] = useState(false);\r\n\r\n    const stateIsEditingSwitch = () => {\r\n        if (stateIsEditing) {\r\n            props.putStatus(stateStatus)    \r\n            stateIsEditingChange(false)\r\n        } else {  \r\n            stateIsEditingChange(true)\r\n        }\r\n    }\r\n\r\n    const changeLocalStatus = (e) => {\r\n        stateStatusChange(e.target.value)    \r\n    }\r\n\r\n    useEffect(() => {\r\n        stateStatusChange(props.status)\r\n    }, [props.status])\r\n\r\n    if (!stateIsEditing) {\r\n        return (\r\n           <p className={ c_css.userInfo__text }\r\n                onClick={ stateIsEditingSwitch }>\r\n                    { props.status ? props.status : \"Описание не задано\" }</p>\r\n        )\r\n    } else {\r\n        return (<input className={ c_css.input }\r\n                        onChange={changeLocalStatus}\r\n                        onBlur={ stateIsEditingSwitch }\r\n                        autoFocus= {true}\r\n                        value={ stateStatus ? stateStatus : \"\" } />\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatusHook;\r\n","import React from \"react\"\r\nimport c_css from \"./UserInfo.module.css\"\r\nimport Loading from \"../../Users/UsersBlock/Loading/Loading\"\r\nimport ProfileStatusHook from \"./ProfileStatus/ProfileStatusHook\"\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    if (props.userInfo) {\r\n        return (\r\n            <div className={c_css.userInfo}>\r\n                <div className={c_css.userInfo__img}>\r\n                    <img src={props.userInfo.photos.small ? props.userInfo.photos.small : \"https://cdn2.iconfinder.com/data/icons/social-flat-buttons-3/512/anonymous-512.png\"} />\r\n                </div>\r\n                <div className={c_css.userInfo__desc}>\r\n                    <h2 className={c_css.userInfo__nickname}>{props.userInfo.fullName}</h2>\r\n                    <p className={c_css.userInfo__text}>{props.userInfo.aboutMe ? props.userInfo.aboutMe : \"Описание не задано\"}</p>\r\n                    <ProfileStatusHook aboutMe={props.userInfo.aboutMe} status={props.status} putStatus={props.putStatus} />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<Loading />)\r\n    }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { setUser, getStatus, putStatus } from \"../../../redux/profileReducer\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { statusSelector, userAuthSelector, userInfoSelector } from \"../../../selectors/userSelectors\";\r\n\r\nclass UserInfoContainer extends React.Component {\r\n    componentDidMount = () => { \r\n\r\n        let isAuth = this.props.userAuth.isAuth;\r\n        let userIdSearch = this.props.params.userId;\r\n        \r\n        if (isAuth && !userIdSearch) {\r\n            userIdSearch = 2;\r\n        }\r\n        \r\n        this.props.setUser(userIdSearch)\r\n\r\n        if (userIdSearch) {\r\n            this.props.getStatus(userIdSearch)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!(this.props.userAuth.isAuth) && !(this.props.params.userId)) {\r\n            return <Navigate to=\"/login\" />\r\n        } else {\r\n            return (\r\n                <UserInfo userInfo={this.props.userInfo} status={this.props.status} getStatus={this.props.getStatus} putStatus={this.props.putStatus} />\r\n            )    \r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userInfo: userInfoSelector(state),\r\n    status: statusSelector(state),\r\n    userAuth: userAuthSelector(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {setUser, getStatus, putStatus})(UserInfoContainer);\r\n","import React from \"react\"\r\nimport UserInfoContainer from \"./UserInfoContainer\";\r\nimport { Navigate, useParams } from \"react-router-dom\"\r\n\r\nconst UserInfoHook = (props) => {\r\n\r\n    let params = useParams();\r\n\r\n    return (\r\n        <UserInfoContainer params={params}/>\r\n    )\r\n    \r\n}\r\n\r\nexport default UserInfoHook;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__aUhEz\",\"posts__title\":\"MyPosts_posts__title__Qpw2r\",\"posts__content\":\"MyPosts_posts__content__WupOT\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__yqZ4d\",\"post__image\":\"Post_post__image__6zMRZ\",\"post__content\":\"Post_post__content__MBmkZ\",\"post__username\":\"Post_post__username__euYhp\",\"post__text\":\"Post_post__text__OnZiG\",\"post__like\":\"Post_post__like__uUJ2T\"};","import React from \"react\"\r\nimport c_css from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (<div className={c_css.post}>\r\n        <div className={c_css.post__image}>\r\n            <img src=\"./images/profile/icon.jpg\" />\r\n        </div>\r\n        <div className={c_css.post__content}>\r\n            <p className={c_css.post__username}><a href=\"#\">{props.username}</a></p>\r\n            <p className={c_css.post__text}>{props.text}</p>\r\n            <button className={c_css.post__like}>{props.like} Like</button>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts__form\":\"PostMake_posts__form__Gwj3Y\",\"posts__input\":\"PostMake_posts__input__3pgaC\",\"posts__buttons\":\"PostMake_posts__buttons__InLAo\",\"posts__post\":\"PostMake_posts__post__v1jeo\",\"posts__clear\":\"PostMake_posts__clear__QV6jV\",\"post__container\":\"PostMake_post__container__jf4KK\",\"error\":\"PostMake_error__oBmQV\"};","import React from \"react\"\r\nimport c_css from \"./PostMake.module.css\"\r\n// import { Field, reduxForm } from 'redux-form'\r\n\r\nlet PostMakeInput = (props) => {\r\n\r\n    let errorState = props.meta.error && props.meta.touched;\r\n\r\n    return <div className={c_css.post__container}>\r\n                <textarea {...props.input} className={`${c_css.posts__input} ${errorState ? c_css.error : \"\" }`}> \r\n                </textarea>\r\n                <span className={c_css.error}>{(errorState) ? props.meta.error : \"\"}</span>\r\n            </div>\r\n}\r\n\r\n//  {...props.meta} {...props}\r\n\r\nexport default PostMakeInput","import React from \"react\"\r\nimport c_css from \"./PostMake.module.css\"\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport PostMakeInput from \"./PostMakeInput\"\r\nimport { maxLength, minLength, notNone } from \"../../../../assets/validation\"\r\n\r\nconst minLength10 = minLength(10); \r\nconst maxLength50 = maxLength(50);\r\n\r\nlet PostMake = (props) => {\r\n    return (<form onSubmit={props.handleSubmit} className={c_css.posts__form}>\r\n        <Field name=\"text\" component={PostMakeInput}\r\n                            validate={[ minLength10, notNone, maxLength50 ]}\r\n                            placeholder=\"Write something there...\"\r\n                            className={c_css.posts__input}\r\n                            onChange={(e) => {props.inputInStateTextarea(e.target.value)}}></Field>\r\n        <div className={c_css.posts__buttons}>\r\n            <button className={c_css.posts__post} type=\"submit\">Post</button>\r\n            <button className={c_css.posts__clear}>Clear</button>\r\n        </div>\r\n    </form >)\r\n}\r\n\r\nPostMake = reduxForm({\r\n    form: \"post\"\r\n})(PostMake)\r\n\r\nlet PostMakeContainer = (props) => {\r\n    let onSubmit = (data) => {\r\n        props.inputInPost(data.text)\r\n    }\r\n\r\n    return <PostMake onSubmit={(data) => onSubmit(data)} {...props} />\r\n}\r\n\r\n\r\nexport default PostMakeContainer;\r\n\r\n\r\n\r\n//onClick={() => {props.inputInPost(ref.current.value)}}\r\n\r\n// onClick={() => {props.inputInStateTextarea(\"\")}}\r\n\r\n","import React from \"react\"\r\nimport PostMake from \"./PostMake.jsx\"\r\nimport { createDispatchAddPost, createDispatchChangeStateTextare } from \"./../../../../redux/profileReducer\"\r\nimport StateContext from \"./../../../../stateContext.jsx\";\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postInput: state.profilePage.postInput \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        inputInPost: (text) => {\r\n            dispatch(createDispatchAddPost(text))\r\n        },\r\n        \r\n        inputInStateTextarea: (text) => {\r\n            dispatch(createDispatchChangeStateTextare(text))\r\n        },\r\n    }\r\n}\r\n\r\nconst PostMakeContainer = connect(mapStateToProps, mapDispatchToProps)(PostMake)\r\n\r\n\r\n// const PostMakeContainer = (props) => {\r\n//     return <StateContext.Consumer>\r\n//                {(store) => {\r\n//                 function inputInPost(text) {\r\n//                     store.dispatch(createDispatchAddPost(text))\r\n//                 };\r\n            \r\n//                 function inputInStateTextarea(text) {\r\n//                     store.dispatch(createDispatchChangeStateTextare(text))\r\n//                 };\r\n\r\n//                return <PostMake \r\n//                             postInput={store.getState().profilePage.postInput} \r\n//                             inputInPost={(text) => {inputInPost(text)}} \r\n//                             inputInStateTextarea={(text) => {inputInStateTextarea(text)}}/>}\r\n//             }\r\n//     </StateContext.Consumer>\r\n// }\r\n\r\nexport default PostMakeContainer;\r\n","import React from \"react\"\r\nimport c_css from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post.jsx\"\r\nimport PostMakeContainer from \"./PostMake/PostMakeContainer.jsx\"\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsMap = props.posts.map((el, ind) => <Post username={el.username} text={el.text} like={el.like} key={ind} />);\r\n\r\n    return (<div className={c_css.posts}>\r\n                <h3 className={c_css.posts__title}>My Posts</h3>\r\n                <PostMakeContainer/>\r\n                <div className={c_css.posts__content}>\r\n                    {postsMap}\r\n                </div>\r\n    </div>)\r\n})\r\n\r\nexport default MyPosts;\r\n","import React from \"react\"\r\nimport MyPosts from \"./MyPosts.jsx\"\r\n// import StateContext from \"./../../../stateContext.jsx\";\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps)(MyPosts)\r\n\r\n// const MyPostsContainer = (props) => {\r\n//     return (<StateContext.Consumer>\r\n//         {(store) => <MyPosts posts={store.getState().profilePage.posts}/>}\r\n//      </StateContext.Consumer>)\r\n// }\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\"\r\nimport c_css from \"./Profile.module.css\"\r\nimport Banner from \"./Banner/Banner.jsx\"\r\nimport UserInfoHook from \"./UserInfo/UserInfoHook.jsx\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\r\nimport StateContext from \"./../../stateContext\";\r\n\r\nconst Profile = () => {\r\n    return (<main className={c_css.profile}>\r\n        <Banner />\r\n        <UserInfoHook />\r\n        <MyPostsContainer />\r\n    </main>)\r\n}\r\n\r\nexport default Profile;\r\n","import { createSelector } from 'reselect'\r\n\r\nexport const userInfoSelector = (state) => {\r\n    return state.profilePage.userInfo\r\n}\r\n\r\nexport const userInfoSuperSelector = createSelector(userInfoSelector, \r\n    (userInfo) => {\r\n            return userInfo.filter((el) => true);\r\n    }\r\n)\r\n\r\nexport const statusSelector = (state) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const userAuthSelector = (state) => {\r\n    return state.auth\r\n}\r\n\r\nexport const pageNumberSelector = (state) => {\r\n    return state.usersPage.pageNumber\r\n}\r\n\r\nexport const pageElementsSelector = (state) => {\r\n    return state.usersPage.pageElements\r\n}\r\n\r\nexport const pageCurrentSelector = (state) => {\r\n    return state.usersPage.pageCurrent\r\n}\r\n\r\nexport const pageButtonsSelector = (state) => {\r\n    return state.usersPage.pageButtons\r\n}\r\n\r\nexport const isLoadingSelector = (state) => {\r\n    return state.usersPage.isLoading\r\n}"],"names":["Banner","_jsx","className","c_css","children","src","props","stateStatus","stateStatusChange","useState","status","stateIsEditing","stateIsEditingChange","stateIsEditingSwitch","putStatus","changeLocalStatus","e","target","value","useEffect","onChange","onBlur","autoFocus","onClick","userInfo","_jsxs","userInfo__img","photos","small","userInfo__desc","userInfo__nickname","fullName","userInfo__text","aboutMe","ProfileStatusHook","Loading","UserInfoContainer","React","constructor","arguments","componentDidMount","isAuth","this","userAuth","userIdSearch","params","userId","setUser","getStatus","render","UserInfo","Navigate","to","connect","state","userInfoSelector","statusSelector","userAuthSelector","useParams","href","username","text","like","errorState","meta","error","touched","input","concat","minLength10","minLength","maxLength50","maxLength","PostMake","onSubmit","handleSubmit","Field","name","component","PostMakeInput","validate","notNone","placeholder","inputInStateTextarea","type","reduxForm","form","data","inputInPost","postInput","profilePage","dispatch","createDispatchAddPost","createDispatchChangeStateTextare","postsMap","posts","map","el","ind","Post","PostMakeContainer","MyPosts","Profile","UserInfoHook","MyPostsContainer","createSelector","filter","auth","pageNumberSelector","usersPage","pageNumber","pageElementsSelector","pageElements","pageCurrentSelector","pageCurrent","pageButtonsSelector","pageButtons","isLoadingSelector","isLoading"],"sourceRoot":""}