{"version":3,"file":"static/js/839.d04522e7.chunk.js","mappings":"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","sources":["webpack://reacct_part2/./src/components/Messages/Message/Message.module.css?0dcd","components/Messages/Message/Message.jsx","webpack://reacct_part2/./src/components/Messages/MessagesNav/MessagesNav.module.css?2b99","components/Messages/MessagesNav/MessagesNav.jsx","webpack://reacct_part2/./src/components/Messages/SendMessage/SendMessage.module.css?1187","components/Messages/SendMessage/SendMessageInput.jsx","components/Messages/SendMessage/SendMessage.jsx","components/Messages/SendMessage/SendMessageContainer.jsx","webpack://reacct_part2/./src/components/Messages/Messages.module.css?8e7e","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","components/withRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages__message\":\"Message_messages__message__+zfHg\",\"messages__messageRight\":\"Message_messages__messageRight__oKOeQ\",\"messages__messageTime\":\"Message_messages__messageTime__c67+r\",\"messages__messageName\":\"Message_messages__messageName__MXkkh\",\"messages__messageText\":\"Message_messages__messageText__g3Nfd\",\"messages__messagePicture\":\"Message_messages__messagePicture__LXI2F\"};","import React from \"react\"\r\nimport c_css from \"./Message.module.css\"\r\n\r\n\r\nconst Message = (props) => {\r\n    return (<section className={`${c_css.messages__message} ${props.me ? c_css.messages__messageRight : \"\"}`}>\r\n        <div className={c_css.messages__messagePicture}>\r\n            <img src={props.img} alt=\"profile_picture\" />\r\n        </div>\r\n        <div className={c_css.messages__messageContent}>\r\n            <h6 className={c_css.messages__messageName}>{props.name}</h6>\r\n            <span className={c_css.messages__messageTime}>{props.time}</span>\r\n            <p className={c_css.messages__messageText}>{props.text}</p>\r\n        </div>\r\n    </section>)\r\n}\r\n\r\nexport default Message;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages__dialogies\":\"MessagesNav_messages__dialogies__LJWfi\",\"active\":\"MessagesNav_active__5Vbc8\"};","import React from \"react\"\r\nimport c_css from \"./MessagesNav.module.css\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nconst MessagesNav = (props) => {\r\n\r\n    let dialogiesMap = props.dialogies.map(el => {\r\n\r\n        if (el.linkNum != \"1\") {\r\n            return <li key={el.linkNum}>\r\n                <NavLink to={\"/messages/\" + el[\"linkNum\"]} className={Data => (Data.isActive ? c_css.active : \"\")}>{el[\"name\"]}</NavLink>\r\n            </li>\r\n        } else {\r\n            return <li key={el.linkNum}>\r\n                <NavLink to={\"/messages/\" + el[\"linkNum\"]} className={Data => (Data.isActive || window.location.href.endsWith(\"messages\") || window.location.href.endsWith(\"messages/\") ? c_css.active : \"\")}>{el[\"name\"]}</NavLink>\r\n            </li>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ul className={c_css.messages__dialogies}>\r\n            {dialogiesMap}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MessagesNav;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message__form\":\"SendMessage_message__form__n+aYB\",\"message__input\":\"SendMessage_message__input__fN6lt\",\"message__buttons\":\"SendMessage_message__buttons__3QwPi\",\"message__post\":\"SendMessage_message__post__-cqGq\",\"message__clear\":\"SendMessage_message__clear__Ad0+N\",\"error\":\"SendMessage_error__0-e8a\",\"input__container\":\"SendMessage_input__container__V2GD2\"};","import React from \"react\"\r\nimport c_css from \"./SendMessage.module.css\"\r\n\r\nlet SendMessageInput = (props) => {\r\n\r\n    let errorState = props.meta.error && props.meta.touched;\r\n\r\n    return <div className={c_css.input__container}>\r\n                <textarea {...props.input} type={props.type} className={`${c_css.message__input} ${errorState ? c_css.error : \"\" }`}> \r\n                </textarea>\r\n                <span className={c_css.error}>{(errorState) ? props.meta.error : \"\"}</span>\r\n            </div>\r\n}\r\n\r\nexport default SendMessageInput","import React from \"react\"\r\nimport c_css from \"./SendMessage.module.css\"\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport SendMessageInput from \"./SendMessageInput\"\r\nimport { maxLength, notNone } from \"../../../assets/validation\";\r\n\r\nlet maxLength200 = maxLength(200);\r\n\r\nlet SendMessage = (props) => {\r\n\r\n    return (<form className={c_css.message__form} onSubmit={props.handleSubmit}>\r\n        <Field component={SendMessageInput} validate={[ maxLength200, notNone ]} name=\"text\" placeholder=\"Write something smart\" onChange={(e) => props.onChangeChangeStateMessage(e.target.value)}></Field>\r\n        <div className={c_css.message__buttons}>\r\n            <button className={c_css.message__post} type=\"submit\">Send</button>\r\n            <button className={c_css.message__clear} onClick={() => props.onChangeChangeStateMessage(\"\")}>Clear</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nSendMessage = reduxForm({\r\n    form: \"message\"\r\n})(SendMessage)\r\n\r\nlet SendMessageContainer = (props) => {\r\n\r\n    let onSubmit = (text) => {\r\n        console.log(text);    \r\n        props.onClickAddMessage(text); \r\n    }\r\n\r\n    return <SendMessage onSubmit={(data) => onSubmit(data.text)}  {...props} />\r\n}\r\n\r\nexport default SendMessageContainer;","import React from \"react\"\r\nimport SendMessage from \"./SendMessage.jsx\"\r\nimport { createDispatchAddMessage, createDispatchChangeStateMessage } from \"./../../../redux/messagesReducer.js\"\r\nimport StateContext from \"../../../stateContext.jsx\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messageInput: state.messagesPage.messageInput\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onClickAddMessage: (text) => {\r\n            dispatch(createDispatchAddMessage(text));\r\n        },\r\n        onChangeChangeStateMessage: (text) => {\r\n            dispatch(createDispatchChangeStateMessage(text));\r\n        }\r\n    }\r\n}\r\n\r\nconst SendMessageContainer = connect(mapStateToProps, mapDispatchToProps)(SendMessage)\r\n\r\n// const SendMessageContainer = (props) => {\r\n\r\n//     return (<StateContext.Consumer>\r\n//         {store => {\r\n//             function onClickAddMessage(text) {\r\n//                 store.dispatch(createDispatchAddMessage(text));\r\n//             };\r\n\r\n//             function onChangeChangeStateMessage(text) {\r\n//                 store.dispatch(createDispatchChangeStateMessage(text));\r\n//             };\r\n\r\n//             return <SendMessage \r\n//                 messageInput={store.getState().messagesPage.messageInput}\r\n//                 onClickAddMessage={(text) => onClickAddMessage(text)}\r\n//                 onChangeChangeStateMessage={((text) => onChangeChangeStateMessage(text))} />\r\n//         }}\r\n//     </StateContext.Consumer>)\r\n// }\r\n\r\nexport default SendMessageContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__gzrWa\",\"messages__content\":\"Messages_messages__content__+oQ2e\"};","import React from \"react\"\r\nimport Message from \"./Message/Message.jsx\"\r\nimport MessagesNav from \"./MessagesNav/MessagesNav.jsx\"\r\nimport SendMessageContainer from \"./SendMessage/SendMessageContainer.jsx\"\r\nimport c_css from \"./Messages.module.css\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nconst Messages = (props) => {\r\n\r\n    let messagesMap = props.messages.map(el => {\r\n        return <Message name={el.name} key={el.id} time={el.time} text={el.text} me={el.me} img={el.img} />\r\n    })\r\n\r\n    return (<main className={c_css.messages}>\r\n        <MessagesNav dialogies={props.dialogies} />\r\n        <div className={c_css.messages__content}>\r\n            {messagesMap}\r\n            <SendMessageContainer />\r\n        </div>\r\n    </main>)\r\n}\r\n\r\nexport default Messages;\r\n","import React from \"react\"\r\nimport Messages from \"./Messages\"\r\nimport { connect } from \"react-redux\"\r\nimport withRedirect from \"../withRedirect\"\r\nimport { compose } from \"redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messagesPage.messages,\r\n        dialogies: state.messagesPage.dialogies\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRedirect,\r\n    connect(mapStateToProps)\r\n)(Messages);","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nfunction withRedirect (Component) {\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    class Container extends React.Component {\r\n        render = () => {\r\n            if (this.props.isAuth) {\r\n                return (<Component {...this.props}/>)\r\n            } else {\r\n                return <Navigate to=\"/login\"/>\r\n            }\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToProps)(Container);\r\n}\r\n\r\nexport default withRedirect;"],"names":["props","_jsxs","className","concat","c_css","messages__message","me","messages__messageRight","children","_jsx","messages__messagePicture","src","img","alt","messages__messageContent","messages__messageName","name","messages__messageTime","time","messages__messageText","text","dialogiesMap","dialogies","map","el","linkNum","NavLink","to","Data","isActive","window","location","href","endsWith","errorState","meta","error","touched","input","type","maxLength200","maxLength","SendMessage","onSubmit","handleSubmit","Field","component","SendMessageInput","validate","notNone","placeholder","onChange","e","onChangeChangeStateMessage","target","value","onClick","reduxForm","form","data","console","log","onClickAddMessage","connect","state","messageInput","messagesPage","dispatch","createDispatchAddMessage","createDispatchChangeStateMessage","messagesMap","messages","Message","id","MessagesNav","SendMessageContainer","compose","withRedirect","Messages","Component","Container","React","constructor","arguments","render","this","isAuth","Navigate","auth"],"sourceRoot":""}